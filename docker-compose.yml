services:
  backend:
    image: potapovjakov/dendroscan-api:v0.0.1
    env_file:
      - .env
    ports:
      - "8000:8000"
    restart: unless-stopped
    depends_on:
      - minio
      - db
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    networks:
      - app-network

  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
       - postgres_data:/var/lib/postgresql/data
    ports:
       - "5432"
    networks:
      - app-network

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    ports:
      - "9000:9001"
      - "9001:9001"
    env_file:
      - .env
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  nginx:
    image: nginx:1.28
    container_name: nginx-balancer
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./sites:/var/www/sites
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
      - result_build:/var/www/build/
    depends_on:
      - backend
    networks:
      - app-network

  frontend:
    image: potapovjakov/dendroscan-frontend:v0.0.1
    volumes:
      - result_build:/app/result_build/build/
    stdin_open: true
    tty: true
    depends_on:
      - nginx
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  result_build:
  postgres_data:
  minio_data:
